<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.detailList.dao.WorkNodeMapper">
  <resultMap id="BaseResultMap" type="com.detailList.entity.WorkNode">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="work_id" jdbcType="VARCHAR" property="workId" />
    <result column="node_name" jdbcType="VARCHAR" property="nodeName" />
    <result column="node_content" jdbcType="VARCHAR" property="nodeContent" />
    <result column="finish_time" jdbcType="TIMESTAMP" property="finishTime" />
    <result column="node_liable" jdbcType="VARCHAR" property="nodeLiable" />
    <result column="node_reason_change" jdbcType="VARCHAR" property="nodeReasonChange" />
    <result column="node_knot_apply" jdbcType="VARCHAR" property="nodeKnotApply" />
    <result column="node_status" jdbcType="CHAR" property="nodeStatus" />
  </resultMap>
  <sql id="Base_Column_List">
    id, work_id, node_name, node_content, finish_time, node_liable, node_reason_change, 
    node_knot_apply, node_status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from dl_work_node
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from dl_work_node
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.detailList.entity.WorkNode">
    insert into dl_work_node (id, work_id, node_name, 
      node_content, finish_time, node_liable, 
      node_reason_change, node_knot_apply, node_status
      )
    values (#{id,jdbcType=VARCHAR}, #{workId,jdbcType=VARCHAR}, #{nodeName,jdbcType=VARCHAR}, 
      #{nodeContent,jdbcType=VARCHAR}, #{finishTime,jdbcType=TIMESTAMP}, #{nodeLiable,jdbcType=VARCHAR}, 
      #{nodeReasonChange,jdbcType=VARCHAR}, #{nodeKnotApply,jdbcType=VARCHAR}, #{nodeStatus,jdbcType=CHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.detailList.entity.WorkNode">
    insert into dl_work_node
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="workId != null">
        work_id,
      </if>
      <if test="nodeName != null">
        node_name,
      </if>
      <if test="nodeContent != null">
        node_content,
      </if>
      <if test="finishTime != null">
        finish_time,
      </if>
      <if test="nodeLiable != null">
        node_liable,
      </if>
      <if test="nodeReasonChange != null">
        node_reason_change,
      </if>
      <if test="nodeKnotApply != null">
        node_knot_apply,
      </if>
      <if test="nodeStatus != null">
        node_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="workId != null">
        #{workId,jdbcType=VARCHAR},
      </if>
      <if test="nodeName != null">
        #{nodeName,jdbcType=VARCHAR},
      </if>
      <if test="nodeContent != null">
        #{nodeContent,jdbcType=VARCHAR},
      </if>
      <if test="finishTime != null">
        #{finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="nodeLiable != null">
        #{nodeLiable,jdbcType=VARCHAR},
      </if>
      <if test="nodeReasonChange != null">
        #{nodeReasonChange,jdbcType=VARCHAR},
      </if>
      <if test="nodeKnotApply != null">
        #{nodeKnotApply,jdbcType=VARCHAR},
      </if>
      <if test="nodeStatus != null">
        #{nodeStatus,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.detailList.entity.WorkNode">
    update dl_work_node
    <set>
      <if test="workId != null">
        work_id = #{workId,jdbcType=VARCHAR},
      </if>
      <if test="nodeName != null">
        node_name = #{nodeName,jdbcType=VARCHAR},
      </if>
      <if test="nodeContent != null">
        node_content = #{nodeContent,jdbcType=VARCHAR},
      </if>
      <if test="finishTime != null">
        finish_time = #{finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="nodeLiable != null">
        node_liable = #{nodeLiable,jdbcType=VARCHAR},
      </if>
      <if test="nodeReasonChange != null">
        node_reason_change = #{nodeReasonChange,jdbcType=VARCHAR},
      </if>
      <if test="nodeKnotApply != null">
        node_knot_apply = #{nodeKnotApply,jdbcType=VARCHAR},
      </if>
      <if test="nodeStatus != null">
        node_status = #{nodeStatus,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.detailList.entity.WorkNode">
    update dl_work_node
    set work_id = #{workId,jdbcType=VARCHAR},
      node_name = #{nodeName,jdbcType=VARCHAR},
      node_content = #{nodeContent,jdbcType=VARCHAR},
      finish_time = #{finishTime,jdbcType=TIMESTAMP},
      node_liable = #{nodeLiable,jdbcType=VARCHAR},
      node_reason_change = #{nodeReasonChange,jdbcType=VARCHAR},
      node_knot_apply = #{nodeKnotApply,jdbcType=VARCHAR},
      node_status = #{nodeStatus,jdbcType=CHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>